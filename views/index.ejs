<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= pageTitle %> - Real Estate Platform</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            background-color: #f8f9fa;
        }

        /* Hero Section */
        .hero {
            background: linear-gradient(135deg, #2d5016 0%, #4CAF50 100%);
            color: white;
            text-align: center;
            padding: 120px 0 80px;
            position: relative;
            overflow: hidden;
        }

        .hero::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 200"><path d="M0,100 C150,200 350,0 500,100 C650,200 850,0 1000,100 L1000,200 L0,200 Z" fill="rgba(255,255,255,0.1)"/></svg>') no-repeat bottom;
            background-size: cover;
        }

        .hero-content {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 2rem;
            position: relative;
            z-index: 1;
        }

        .hero h1 {
            font-size: 3.5rem;
            margin-bottom: 1rem;
            animation: fadeInUp 1s ease-out;
        }

        .hero p {
            font-size: 1.3rem;
            margin-bottom: 2rem;
            opacity: 0.9;
            animation: fadeInUp 1s ease-out 0.3s both;
        }

        .stats {
            display: flex;
            justify-content: center;
            gap: 3rem;
            margin-top: 3rem;
            animation: fadeInUp 1s ease-out 0.6s both;
        }

        .stat-item {
            text-align: center;
        }

        .stat-number {
            font-size: 2.5rem;
            font-weight: bold;
            display: block;
            margin-bottom: 0.5rem;
        }

        .stat-label {
            font-size: 1rem;
            opacity: 0.8;
        }

        /* Property Categories */
        .categories {
            padding: 80px 0;
            background: white;
        }

        .container {
            max-width: 80%;
            margin: 0 auto;
            padding: 0 2rem;
        }

        .section-title {
            text-align: center;
            font-size: 2.5rem;
            margin-bottom: 3rem;
            color: #333;
            position: relative;
        }

        .section-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 3px;
            background: #4CAF50;
        }

        .category-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 2rem;
            margin-bottom: 4rem;
        }

        .category-card {
            background: white;
            border-radius: 10px;
            padding: 2rem;
            text-align: center;
            box-shadow: 0 5px 20px rgba(0,0,0,0.08);
            transition: all 0.3s;
            cursor: pointer;
            border: 2px solid transparent;
        }

        .category-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0,0,0,0.12);
            border-color: #4CAF50;
        }

        .category-icon {
            font-size: 3rem;
            margin-bottom: 1rem;
            color: #4CAF50;
        }

        .category-title {
            font-size: 1.5rem;
            margin-bottom: 1rem;
            color: #2d5016;
            font-weight: 600;
        }

        .category-description {
            color: #666;
            margin-bottom: 1.5rem;
        }

        .category-count {
            background: #4CAF50;
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-weight: bold;
            display: inline-block;
        }

        /* Properties Section */
        .properties {
            padding: 80px 0;
            background: #f8f9fa;
        }

        .property-filters {
            display: flex;
            justify-content: center;
            gap: 1rem;
            margin-bottom: 3rem;
            flex-wrap: wrap;
        }

        .filter-btn {
            background: white;
            border: 2px solid #e0e0e0;
            padding: 0.8rem 1.5rem;
            border-radius: 25px;
            cursor: pointer;
            transition: all 0.3s;
            font-weight: 500;
            color: #333;
        }

        .filter-btn:hover, .filter-btn.active {
            background: #4CAF50;
            color: white;
            border-color: #4CAF50;
        }

        .property-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
        }

        .property-card {
            background: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 5px 20px rgba(0,0,0,0.08);
            transition: all 0.3s;
            border: 1px solid #e0e0e0;
        }

        .property-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 35px rgba(0,0,0,0.12);
            border-color: #4CAF50;
        }

        .property-image {
            width: 100%;
            height: 220px;
            object-fit: cover;
            position: relative;
        }

        .property-status {
            position: absolute;
            top: 1rem;
            right: 1rem;
            background: #4CAF50;
            color: white;
            padding: 0.3rem 0.8rem;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: bold;
            text-transform: uppercase;
        }

        .property-status.sold {
            background: #333;
        }

        .property-status.pending {
            background: #ff9800;
        }

        .property-content {
            padding: 1.5rem;
        }

        .property-price {
            font-size: 1.5rem;
            font-weight: bold;
            color: #4CAF50;
            margin-bottom: 0.5rem;
        }

        .property-title {
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: #2d5016;
        }

        .property-location {
            color: #666;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .property-features {
            display: flex;
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .feature {
            display: flex;
            align-items: center;
            gap: 0.3rem;
            font-size: 0.9rem;
            color: #666;
        }

        .property-agent {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding-top: 1rem;
            border-top: 1px solid #eee;
            font-size: 0.9rem;
            color: #666;
        }

        /* Animations */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .fade-in {
            animation: fadeInUp 1s ease-out;
        }

        /* Responsive Design */
        @media (max-width: 1024px) {
            .hero h1 {
                font-size: 3rem;
            }
            
            .category-grid {
                grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
                gap: 1.5rem;
            }
            
            .property-grid {
                grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            }
        }

        @media (max-width: 768px) {
            .nav-container {
                padding: 0 1rem;
            }
            
            .hero {
                padding: 100px 0 60px;
            }
            
            .hero h1 {
                font-size: 2.5rem;
            }
            
            .hero p {
                font-size: 1.1rem;
            }

            .stats {
                flex-direction: column;
                gap: 1.5rem;
            }

            .section-title {
                font-size: 2rem;
            }

            .category-grid {
                grid-template-columns: 1fr;
                gap: 1rem;
            }

            .property-grid {
                grid-template-columns: 1fr;
                gap: 1rem;
            }

            .property-filters {
                flex-direction: column;
                align-items: center;
                gap: 0.5rem;
            }
            
            .filter-btn {
                padding: 0.6rem 1.2rem;
                font-size: 0.9rem;
            }
            
            .property-features {
                flex-wrap: wrap;
                gap: 0.5rem;
            }
            
            .container {
                padding: 0 1rem;
            }
            
            .categories, .properties {
                padding: 60px 0;
            }
            
            
        }

        @media (max-width: 480px) {
            .hero h1 {
                font-size: 2rem;
            }
            
            .hero p {
                font-size: 1rem;
            }
            
            .stat-number {
                font-size: 2rem;
            }
            
            .category-card {
                padding: 1.5rem;
            }
            
            .property-content {
                padding: 1rem;
            }
            
            .property-price {
                font-size: 1.3rem;
            }
        }

        /* Loading Animation */
        .loading {
            display: none;
            text-align: center;
            padding: 2rem;
        }

        .spinner {
            width: 40px;
            height: 40px;
            border: 4px solid #f3f3f3;
            border-top: 4px solid #4CAF50;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto 1rem;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Search Bar Styles inside Hero Section */
.hero .search-container {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-top: 2rem;
    max-width: 700px;
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    background-color: #fff;
    border-radius: 50px;
    padding: 8px 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    transition: box-shadow 0.3s ease;
}

.hero .search-container:hover {
    box-shadow: 0 6px 20px rgba(0, 128, 0, 0.2); /* subtle green glow on hover */
}

.search-bar {
    flex: 1;
    padding: 12px 20px;
    border: none;
    outline: none;
    font-size: 16px;
    border-radius: 50px;
    background-color: transparent;
    color: #333;
}

.search-bar::placeholder {
    color: #aaa;
    font-style: italic;
}

.search-btn {
    background-color: #2d5016;
    color: #fff;
    border: none;
    padding: 12px 20px;
    font-size: 16px;
    border-radius: 50px;
    cursor: pointer;
    transition: background-color 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
}

.search-btn i {
    margin-left: 4px;
}

.search-btn:hover {
    background-color: #1f3810;
}

/* Responsive */
@media screen and (max-width: 600px) {
    .hero .search-container {
        flex-direction: column;
        border-radius: 12px;
        padding: 12px;
    }

    .search-bar {
        width: 100%;
        border-radius: 12px;
        margin-bottom: 10px;
    }

    .search-btn {
        width: 100%;
        border-radius: 12px;
    }
}

.property-link-img,
.property-link-title {
  text-decoration: none;
  color: inherit;
}

.property-link-title:hover {
  text-decoration: underline;
}

.category-count-link {
  text-decoration: none;
}

.category-count {
  display: inline-block;
  margin-top: 10px;
  padding: 6px 12px;
  background-color: #2e7d32;
  color: #fff;
  border-radius: 20px;
  font-weight: bold;
  transition: background-color 0.3s ease;
  cursor: pointer;
}

.category-count:hover {
  background-color: #1b5e20;
}
    </style>
</head>
<body>

<%- include('partials/header', { user: user }) %>

<!-- Hero Section -->
<section class="hero">
    <div class="hero-content">
        <h1>Find Your Dream Property</h1>
        <p>Discover the perfect home, plot, or commercial space with our comprehensive real estate platform</p>
        
        <!-- Search Bar -->
        <div class="search-container">
            <input type="text" class="search-bar" placeholder="Search properties by location, title, or type..." id="searchInput">
            <button class="search-btn" onclick="searchProperties()">
                <i class="fas fa-search"></i>
            </button>
        </div>
        
        <div class="stats">
            <div class="stat-item">
                <span class="stat-number"><%= stats.totalProperties %></span>
                <span class="stat-label">Total Properties</span>
            </div>
            <div class="stat-item">
                <span class="stat-number"><%= stats.activeListings %></span>
                <span class="stat-label">Active Listings</span>
            </div>
            <div class="stat-item">
                <span class="stat-number"><%= stats.totalAgents %></span>
                <span class="stat-label">Expert Agents</span>
            </div>
        </div>
    </div>
</section>

<!-- Property Categories -->
<section class="categories">
  <div class="container">
    <h2 class="section-title">What We Offer</h2>
    <div class="category-grid">

      <% const categories = [
        { type: 'house', icon: 'fa-home', title: 'Houses', description: 'Beautiful residential houses perfect for families' },
        { type: 'apartment', icon: 'fa-building', title: 'Apartments', description: 'Modern apartments in prime locations' },
        { type: 'plot', icon: 'fa-map', title: 'Plots', description: 'Prime land for your dream construction' },
        { type: 'commercial', icon: 'fa-store', title: 'Commercial', description: 'Spaces for your business ventures' },
      ]; %>

      <% categories.forEach(cat => { %>
        <div class="category-card" onclick="filterProperties('<%= cat.type %>')">
          <div class="category-icon">
            <i class="fas <%= cat.icon %>"></i>
          </div>
          <h3 class="category-title"><%= cat.title %></h3>
          <p class="category-description"><%= cat.description %></p>
          
          <a href="/search?q=<%= cat.type %>" class="category-count-link" onclick="event.stopPropagation();">
            <span class="category-count">
              <%= categoryStats[cat.type] || 0 %> Available
            </span>
          </a>
        </div>
      <% }); %>

    </div>
  </div>
</section>


<!-- Properties Section -->
<section class="properties" id="properties">
  <div class="container">
    <h2 class="section-title">Featured Properties</h2>

    <div class="property-filters">
      <button class="filter-btn active" onclick="filterProperties('all')">All Properties</button>
      <button class="filter-btn" onclick="filterProperties('home')">Homes</button>
      <button class="filter-btn" onclick="filterProperties('apartment')">Apartments</button>
      <button class="filter-btn" onclick="filterProperties('plot')">Plots</button>
      <button class="filter-btn" onclick="filterProperties('commercial')">Commercial</button>
    </div>

    <div class="loading">
      <div class="spinner"></div>
      <p>Loading properties...</p>
    </div>

    <div class="property-grid" id="propertyGrid">
      <% properties.slice(0, 6).forEach(property => { %>
        <div class="property-card"
          data-type="<%= property.type %>"
          data-status="<%= property.status %>"
          data-title="<%= property.title.toLowerCase() %>"
          data-location="<%= property.location.toLowerCase() %>">

          <!-- Clickable Image -->
          <a href="/properties/<%= property.slug %>" class="property-link-img">
            <div style="position: relative;">
              <% if (Array.isArray(property.imageUrls) && property.imageUrls.length > 0) { %>
                <img src="<%= property.imageUrls[0] %>" alt="<%= property.title %>" class="property-image" />
              <% } else if (typeof property.imageUrls === 'string' && property.imageUrls.length > 0) { %>
                <img src="<%= property.imageUrls %>" alt="<%= property.title %>" class="property-image" />
              <% } else { %>
                <div class="property-image"
                  style="background: linear-gradient(135deg, #4CAF50 0%, #2d5016 100%);
                         display: flex; align-items: center; justify-content: center;
                         color: white; font-size: 2rem;">
                  <i class="fas fa-home"></i>
                </div>
              <% } %>

              <div class="property-status <%= property.status === 'sold' ? 'sold' : property.status === 'pending' ? 'pending' : '' %>">
                <%= property.status %>
              </div>
            </div>
          </a>

          <div class="property-content">
            <div class="property-price">
              $<%= property.price ? property.price.toLocaleString() : 'Price on request' %>
            </div>

            <h3 class="property-title">
              <a href="/properties/<%= property.slug %>" class="property-link-title">
                <%= property.title %>
              </a>
            </h3>

            <div class="property-location">
              <i class="fas fa-map-marker-alt"></i>
              <span><%= property.location %></span>
            </div>

            <div class="property-features">
              <% if (property.bedrooms) { %>
                <div class="feature">
                  <i class="fas fa-bed"></i>
                  <span><%= property.bedrooms %> Beds</span>
                </div>
              <% } %>
              <% if (property.bathrooms) { %>
                <div class="feature">
                  <i class="fas fa-bath"></i>
                  <span><%= property.bathrooms %> Baths</span>
                </div>
              <% } %>
              <% if (property.area) { %>
                <div class="feature">
                  <i class="fas fa-ruler-combined"></i>
                  <span><%= property.area %> sqft</span>
                </div>
              <% } %>
            </div>

            <div class="property-agent">
              <i class="fas fa-user-tie"></i>
              <span>Listed by <%= property.agent ? 'Agent' : 'Admin' %></span>
            </div>
          </div>
        </div>
      <% }); %>
    </div>
  </div>
</section>

<!-- Projects Section -->
<section class="properties" id="projects">
  <div class="container">
    <h2 class="section-title">Featured Projects</h2>

    <div class="loading">
      <div class="spinner"></div>
      <p>Loading projects...</p>
    </div>

    <div class="property-grid" id="projectGrid">
      <% projects.slice(0, 6).forEach(project => { %>
        <div class="property-card"
          data-type="<%= project.type || '' %>"
          data-title="<%= project.title ? project.title.toLowerCase() : '' %>"
          data-location="<%= project.location ? project.location.toLowerCase() : '' %>">

          <!-- Clickable Image -->
          <a href="/projects/<%= project.slug %>" class="property-link-img">
            <div style="position: relative;">
              <% if (Array.isArray(project.imageUrls) && project.imageUrls.length > 0) { %>
                <img src="<%= project.imageUrls[0] %>" alt="<%= project.title || 'Project' %>" class="property-image" />
              <% } else if (typeof project.imageUrls === 'string' && project.imageUrls.length > 0) { %>
                <img src="<%= project.imageUrls %>" alt="<%= project.title || 'Project' %>" class="property-image" />
              <% } else { %>
                <div class="property-image"
                  style="background: linear-gradient(135deg, #2196F3 0%, #0b3e74 100%);
                         display: flex; align-items: center; justify-content: center;
                         color: white; font-size: 2rem;">
                  <i class="fas fa-building"></i>
                </div>
              <% } %>
            </div>
          </a>

          <div class="property-content">
            <div class="property-price">
              <% if (typeof project.priceRange === 'object' && project.priceRange.min && project.priceRange.max) { %>
                <%= 'PKR ' + project.priceRange.min.toLocaleString() + ' - ' + project.priceRange.max.toLocaleString() %>
              <% } else if (typeof project.priceRange === 'string') { %>
                <%= project.priceRange %>
              <% } else { %>
                Price on request
              <% } %>
            </div>

            <h3 class="property-title">
              <a href="/projects/<%= project.slug %>" class="property-link-title">
                <%= project.title || 'Untitled Project' %>
              </a>
            </h3>

            <div class="property-location">
              <i class="fas fa-map-marker-alt"></i>
              <span><%= project.location || 'Unknown location' %></span>
            </div>

            <div class="property-features">
              <% if (project.type) { %>
                <div class="feature">
                  <i class="fas fa-layer-group"></i>
                  <span><%= project.type %></span>
                </div>
              <% } %>
              <% if (project.launchDate) { %>
                <div class="feature">
                  <i class="fas fa-rocket"></i>
                  <span>Launch: <%= new Date(project.launchDate).getFullYear() %></span>
                </div>
              <% } %>
              <% if (project.completionDate) { %>
                <div class="feature">
                  <i class="fas fa-check-circle"></i>
                  <span>Completion: <%= new Date(project.completionDate).getFullYear() %></span>
                </div>
              <% } %>
            </div>

            <div class="property-agent">
              <i class="fas fa-user-tie"></i>
              <span>By <%= project.agent ? 'Agent' : 'Admin' %></span>
            </div>
          </div>
        </div>
      <% }) %>
    </div>
  </div>
</section>

<%- include('partials/footer') %>

<script>
  // DOM Elements
  const loadingElement = document.querySelector('.loading');
  const propertyGrid = document.getElementById('propertyGrid');
  const filterButtons = document.querySelectorAll('.filter-btn');
  const searchInput = document.getElementById('searchInput');

  // Property filtering functionality
  function filterProperties(type, event) {
    loadingElement.style.display = 'block';
    propertyGrid.style.opacity = '0.5';

    filterButtons.forEach(btn => btn.classList.remove('active'));
    if (event && event.target) {
      event.target.classList.add('active');
    }

    setTimeout(() => {
      const propertyCards = document.querySelectorAll('.property-card');

      propertyCards.forEach(card => {
        const cardType = card.getAttribute('data-type');
        const isVisible = type === 'all' || cardType === type;
        card.style.display = isVisible ? 'block' : 'none';
        if (isVisible) {
          card.style.animation = 'fadeInUp 0.5s ease-out';
        }
      });

      loadingElement.style.display = 'none';
      propertyGrid.style.opacity = '1';
      updateCategoryCounts();
    }, 300);
  }

  // Search functionality
  function searchProperties() {
  const searchTerm = searchInput.value.trim();
  if (searchTerm) {
    const query = encodeURIComponent(searchTerm);
    window.location.href = `/search?q=${query}`;
  }
}

  // Update category counts
  function updateCategoryCounts() {
    const activeFilter = document.querySelector('.filter-btn.active')?.textContent.toLowerCase() || 'all';
    const hasSearchTerm = searchInput.value.trim() !== '';
    const visibleCards = document.querySelectorAll('.property-card:not([style*="display: none"])');

    let counts = {
      home: <%= typeof categoryStats.home !== 'undefined' ? categoryStats.home : 0 %>,
      apartment: <%= typeof categoryStats.apartment !== 'undefined' ? categoryStats.apartment : 0 %>,
      plot: <%= typeof categoryStats.plot !== 'undefined' ? categoryStats.plot : 0 %>,
      commercial: <%= typeof categoryStats.commercial !== 'undefined' ? categoryStats.commercial : 0 %>
    };

    if (activeFilter !== 'all' || hasSearchTerm) {
      counts = { home: 0, apartment: 0, plot: 0, commercial: 0 };
      visibleCards.forEach(card => {
        const type = card.getAttribute('data-type');
        if (counts.hasOwnProperty(type)) {
          counts[type]++;
        }
      });
    }

    Object.entries(counts).forEach(([type, count]) => {
      const element = document.getElementById(`${type}Count`);
      if (element) {
        element.textContent = `${count} Available`;
      }
    });
  }

  // DOM Ready
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.property-card').forEach((card, index) => {
      card.style.animationDelay = `${index * 0.1}s`;
    });
    updateCategoryCounts();
  });

  // Smooth scrolling
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function(e) {
      e.preventDefault();
      const target = document.querySelector(this.getAttribute('href'));
      target?.scrollIntoView({ behavior: 'smooth', block: 'start' });
    });
  });

  // Intersection Observer animations
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.style.animation = 'fadeInUp 1s ease-out';
      }
    });
  }, { threshold: 0.1, rootMargin: '0px 0px -50px 0px' });

  document.querySelectorAll('.property-card, .category-card').forEach(card => {
    observer.observe(card);
  });

  // Search on Enter key
  searchInput.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') searchProperties();
  });
</script>
</body>
</html>