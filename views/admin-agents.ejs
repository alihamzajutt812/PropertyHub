<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title><%= pageTitle %></title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');
    
    :root {
      --primary-green: #22c55e;
      --secondary-green: #16a34a;
      --dark-green: #15803d;
      --light-green: #dcfce7;
      --accent-green: #4ade80;
      --pure-white: #ffffff;
      --off-white: #fefefe;
      --light-gray: #f8fafc;
      --text-dark: #1e293b;
      --text-light: #64748b;
      --danger-red: #ef4444;
      --danger-dark: #dc2626;
      
      /* Gradients */
      --gradient-primary: linear-gradient(135deg, #22c55e 0%, #16a34a 100%);
      --gradient-secondary: linear-gradient(135deg, #16a34a 0%, #15803d 100%);
      --gradient-accent: linear-gradient(135deg, #4ade80 0%, #22c55e 100%);
      --gradient-bg: linear-gradient(135deg, #f0fdf4 0%, #ffffff 50%, #f8fafc 100%);
      --gradient-danger: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
      
      /* Shadows */
      --shadow-light: 0 4px 20px rgba(34, 197, 94, 0.1);
      --shadow-medium: 0 8px 30px rgba(34, 197, 94, 0.15);
      --shadow-heavy: 0 12px 40px rgba(34, 197, 94, 0.2);
      --shadow-danger: 0 4px 20px rgba(239, 68, 68, 0.15);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Poppins', sans-serif;
      background: var(--gradient-bg);
      min-height: 100vh;
      color: var(--text-dark);
      line-height: 1.6;
      position: relative;
      overflow-x: hidden;
    }

    /* Animated Background Elements */
    body::before {
      content: '';
      position: fixed;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: radial-gradient(circle, rgba(34, 197, 94, 0.03) 0%, transparent 50%);
      animation: float 20s ease-in-out infinite;
      z-index: -2;
    }

    body::after {
      content: '';
      position: fixed;
      top: 20%;
      right: -10%;
      width: 500px;
      height: 500px;
      background: radial-gradient(circle, rgba(76, 222, 128, 0.08) 0%, transparent 70%);
      border-radius: 50%;
      animation: pulse 15s ease-in-out infinite;
      z-index: -1;
    }

    @keyframes float {
      0%, 100% { transform: translate(0, 0) rotate(0deg); }
      33% { transform: translate(30px, -30px) rotate(120deg); }
      66% { transform: translate(-20px, 20px) rotate(240deg); }
    }

    @keyframes pulse {
      0%, 100% { transform: scale(1); opacity: 0.5; }
      50% { transform: scale(1.2); opacity: 0.8; }
    }

    @keyframes slideInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes scaleIn {
      from {
        opacity: 0;
        transform: scale(0.9);
      }
      to {
        opacity: 1;
        transform: scale(1);
      }
    }

    /* Header Section */
    .hero-header {
      position: relative;
      background: linear-gradient(135deg, #1a472a 0%, #2f7d40 100%);
      padding: 4rem 0;
      margin: -1.5rem -1.5rem 3rem -1.5rem;
      overflow: hidden;
      box-shadow: var(--shadow-medium);
    }

    .hero-header::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 100" fill="rgba(255,255,255,0.1)"><polygon points="0,0 1000,0 1000,60 0,100"/></svg>');
      background-size: cover;
    }

    .hero-content {
      position: relative;
      z-index: 2;
      text-align: center;
      color: var(--pure-white);
      animation: slideInUp 1s ease-out;
    }

    .hero-title {
      font-size: 3.5rem;
      font-weight: 700;
      margin-bottom: 1rem;
      /* text-shadow: 2px 2px 20px rgba(0,0,0,0.3); */
      background: linear-gradient(45deg, #ffffff, #f0fdf4);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .hero-subtitle {
      font-size: 1.3rem;
      font-weight: 300;
      opacity: 0.95;
      margin-bottom: 2rem;
    }

    .hero-stats {
      display: flex;
      justify-content: center;
      gap: 3rem;
      margin-top: 2rem;
      flex-wrap: wrap;
    }

    .hero-stat {
      text-align: center;
      animation: scaleIn 1s ease-out 0.5s both;
    }

    .hero-stat-number {
      font-size: 2.5rem;
      font-weight: 700;
      display: block;
    }

    .hero-stat-label {
      opacity: 0.9;
      font-size: 0.9rem;
      text-transform: uppercase;
      letter-spacing: 1px;
    }

    /* Floating Particles */
    .particle {
      position: absolute;
      background: rgba(255, 255, 255, 0.2);
      border-radius: 50%;
      animation: floatParticle 6s ease-in-out infinite;
    }

    .particle:nth-child(1) { width: 4px; height: 4px; top: 20%; left: 20%; animation-delay: 0s; }
    .particle:nth-child(2) { width: 6px; height: 6px; top: 40%; left: 80%; animation-delay: 2s; }
    .particle:nth-child(3) { width: 3px; height: 3px; top: 70%; left: 10%; animation-delay: 4s; }
    .particle:nth-child(4) { width: 5px; height: 5px; top: 30%; left: 60%; animation-delay: 1s; }

    @keyframes floatParticle {
      0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 0.7; }
      50% { transform: translateY(-20px) rotate(180deg); opacity: 1; }
    }

    /* Cards */
    .glass-card {
      background: var(--pure-white);
      backdrop-filter: blur(20px);
      border: 1px solid rgba(34, 197, 94, 0.1);
      border-radius: 24px;
      box-shadow: var(--shadow-light);
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      position: relative;
      overflow: hidden;
      animation: slideInUp 0.8s ease-out;
    }

    .glass-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
      transition: left 0.6s;
    }

    .glass-card:hover::before {
      left: 100%;
    }

    .glass-card:hover {
      transform: translateY(-10px) scale(1.02);
      box-shadow: var(--shadow-heavy);
    }

    .card-header-gradient {
      background: var(--gradient-secondary);
      color: var(--pure-white);
      padding: 2rem;
      border-radius: 24px 24px 0 0;
      position: relative;
      overflow: hidden;
    }

    .card-header-gradient::after {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      width: 100px;
      height: 100px;
      background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
      border-radius: 50%;
      transform: translate(30px, -30px);
    }

    .card-title {
      font-size: 1.5rem;
      font-weight: 600;
      margin: 0;
      display: flex;
      align-items: center;
      gap: 1rem;
    }

    .card-title i {
      font-size: 1.8rem;
      padding: 0.5rem;
      background: rgba(255, 255, 255, 0.2);
      border-radius: 12px;
    }

    /* Quick Stats */
    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 1.5rem;
      margin-bottom: 3rem;
    }

    .stat-card {
      background: linear-gradient(135deg, #1a472a 0%, #2f7d40 100%);
      border-radius: 20px;
      padding: 2rem;
      text-align: center;
      color: var(--pure-white);
      position: relative;
      overflow: hidden;
      transition: all 0.3s ease;
      animation: scaleIn 0.6s ease-out;
    }

    .stat-card::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 50%);
      transform: scale(0);
      transition: transform 0.6s ease;
    }

    .stat-card:hover::before {
      transform: scale(1);
    }

    .stat-card:hover {
      transform: translateY(-5px) rotate(2deg);
    }

    .stat-icon {
      font-size: 3rem;
      margin-bottom: 1rem;
      opacity: 0.9;
    }

    .stat-number {
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 0.5rem;
    }

    .stat-label {
      font-size: 0.9rem;
      opacity: 0.9;
      text-transform: uppercase;
      letter-spacing: 1px;
    }

    /* Forms */
    .form-group-modern {
      margin-bottom: 1.5rem;
    }

    .form-label-modern {
      display: block;
      font-size: 0.9rem;
      font-weight: 500;
      color: var(--dark-green);
      margin-bottom: 0.5rem;
    }

    .form-control-modern {
      background: var(--pure-white);
      border: 2px solid rgba(34, 197, 94, 0.2);
      border-radius: 16px;
      padding: 1rem 1.5rem;
      font-size: 1rem;
      width: 100%;
      transition: all 0.3s ease;
      backdrop-filter: blur(10px);
      color: var(--text-dark);
    }

    .form-control-modern:focus {
      background: var(--pure-white);
      border-color: var(--primary-green);
      box-shadow: 0 0 0 4px rgba(34, 197, 94, 0.1);
      transform: translateY(-2px);
      outline: none;
    }

    .form-control-modern::placeholder {
      color: var(--text-light);
      opacity: 0.7;
    }

    /* Buttons */
    .btn-modern {
      background: var(--gradient-primary);
      border: none;
      border-radius: 16px;
      padding: 1rem 2rem;
      font-weight: 600;
      font-size: 1rem;
      color: var(--pure-white);
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
      text-transform: uppercase;
      letter-spacing: 1px;
      cursor: pointer;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      justify-content: center;
    }

    .btn-modern::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
      transition: left 0.6s;
    }

    .btn-modern:hover::before {
      left: 100%;
    }

    .btn-modern:hover {
      transform: translateY(-3px);
      box-shadow: var(--shadow-medium);
      color: var(--pure-white);
    }

    .btn-danger-modern {
      background: var(--gradient-danger);
    }

    .btn-danger-modern:hover {
      box-shadow: var(--shadow-danger);
      color: var(--pure-white);
    }

    /* Table */
    .table-modern {
      background: transparent;
      border-radius: 20px;
      overflow: hidden;
      box-shadow: var(--shadow-light);
    }

    .table-modern thead th {
      background: var(--gradient-secondary);
      color: var(--pure-white);
      border: none;
      padding: 1.5rem;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 1px;
      font-size: 0.9rem;
    }

    .table-modern tbody tr {
      background: var(--pure-white);
      transition: all 0.3s ease;
    }

    .table-modern tbody tr:hover {
      background: var(--light-green);
      transform: scale(1.01);
    }

    .table-modern tbody td {
      padding: 1.5rem;
      border: none;
      vertical-align: middle;
    }

    .avatar-modern {
      width: 50px;
      height: 50px;
      border-radius: 50%;
      background: var(--gradient-accent);
      display: flex;
      align-items: center;
      justify-content: center;
      color: var(--pure-white);
      font-size: 1.2rem;
      font-weight: 600;
      margin-right: 1rem;
      position: relative;
      overflow: hidden;
      flex-shrink: 0;
    }

    .avatar-modern::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: radial-gradient(circle, rgba(255,255,255,0.2) 0%, transparent 50%);
      animation: rotate 10s linear infinite;
    }

    @keyframes rotate {
      from { transform: rotate(0deg); }
      to { transform: rotate(360deg); }
    }

    /* Action Buttons */
    .action-group {
      display: flex;
      gap: 0.5rem;
      flex-wrap: wrap;
    }

    .btn-icon {
      min-width: 40px;
      height: 40px;
      border-radius: 12px;
      display: flex;
      align-items: center;
      justify-content: center;
      border: none;
      font-size: 0.9rem;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
      cursor: pointer;
      text-decoration: none;
      padding: 0.5rem 0.75rem;
    }

    .btn-icon.btn-modern {
      background: var(--gradient-primary);
      color: var(--pure-white);
    }

    .btn-icon.btn-danger-modern {
      background: var(--gradient-danger);
      color: var(--pure-white);
    }

    .btn-icon:hover {
      transform: scale(1.1) rotate(5deg);
      color: var(--pure-white);
    }

    /* Alert */
    .alert-modern {
      background: rgba(239, 68, 68, 0.1);
      border: 1px solid rgba(239, 68, 68, 0.2);
      border-radius: 16px;
      padding: 1.5rem;
      color: var(--danger-dark);
      backdrop-filter: blur(10px);
      animation: slideInUp 0.5s ease-out;
    }

    /* Responsive Design */
    @media (max-width: 1200px) {
      .container {
        padding: 0 1rem;
      }
    }

    @media (max-width: 992px) {
      .hero-header {
        padding: 3rem 0;
      }
      
      .hero-title {
        font-size: 2.8rem;
      }
      
      .hero-stats {
        gap: 2rem;
      }
      
      .stats-grid {
        grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
        gap: 1rem;
      }
    }

    @media (max-width: 768px) {
      .hero-header {
        margin: -1.5rem -1.5rem 2rem -1.5rem;
        padding: 2rem 0;
      }
      
      .hero-title {
        font-size: 2.2rem;
      }
      
      .hero-subtitle {
        font-size: 1.1rem;
      }
      
      .hero-stats {
        flex-direction: column;
        gap: 1rem;
        align-items: center;
      }
      
      .action-group {
        flex-direction: column;
        gap: 0.5rem;
      }
      
      .btn-icon {
        width: 100%;
        justify-content: flex-start;
        padding: 0.75rem 1rem;
        border-radius: 12px;
        min-width: auto;
      }
      
      .btn-icon i {
        margin-right: 0.5rem;
      }
      
      .fab {
        bottom: 1rem;
        right: 1rem;
        width: 60px;
        height: 60px;
        font-size: 1.3rem;
      }
      
      .stats-grid {
        grid-template-columns: 1fr;
      }
    }

    @media (max-width: 576px) {
      body {
        padding: 0.5rem !important;
      }
      
      .hero-header {
        margin: -0.5rem -0.5rem 1.5rem -0.5rem;
      }
      
      .hero-title {
        font-size: 1.8rem;
      }
      
      .glass-card {
        border-radius: 16px;
      }
      
      .card-header-gradient {
        padding: 1.5rem;
        border-radius: 16px 16px 0 0;
      }
      
      .form-control-modern {
        font-size: 16px; /* Prevents zoom on iOS */
      }
      
      .table-modern thead th,
      .table-modern tbody td {
        padding: 1rem 0.5rem;
        font-size: 0.9rem;
      }
      
      .avatar-modern {
        width: 40px;
        height: 40px;
        font-size: 1rem;
        margin-right: 0.5rem;
      }
    }

    @media (max-width: 480px) {
      .hero-title {
        font-size: 1.5rem;
      }
      
      .table-modern .d-none-mobile {
        display: none !important;
      }
      
      .btn-icon {
        padding: 0.6rem 0.8rem;
        font-size: 0.85rem;
      }
    }
  </style>
</head>
<body class="p-4">
  <!-- Hero Header -->
  <div class="hero-header">
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    
    <div class="container">
      <div class="hero-content">
        <h1 class="hero-title">
          <i class=" me-3"></i>Agent center
        </h1>
        <p class="hero-subtitle">Manage your elite team with style and precision</p>
        
        <div class="hero-stats">
          <div class="hero-stat">
            <span class="hero-stat-number"><%= agents.length %></span>
            <span class="hero-stat-label">Active Agents</span>
          </div>
          <div class="hero-stat">
            <span class="hero-stat-number">100%</span>
            <span class="hero-stat-label">Success Rate</span>
          </div>
          <div class="hero-stat">
            <span class="hero-stat-number">24/7</span>
            <span class="hero-stat-label">Monitoring</span>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="container">
    <% if (typeof error !== 'undefined') { %>
      <div class="alert-modern mb-4">
        <i class="fas fa-exclamation-triangle me-2"></i><%= error %>
      </div>
    <% } %>

    <!-- Quick Stats -->
    <div class="stats-grid">
      <div class="stat-card">
        <div class="stat-icon">
          <i class="fas fa-users"></i>
        </div>
        <div class="stat-number"><%= agents.length %></div>
        <div class="stat-label">Total Agents</div>
      </div>
      <div class="stat-card">
        <div class="stat-icon">
          <i class="fas fa-user-check"></i>
        </div>
        <div class="stat-number"><%= agents.length %></div>
        <div class="stat-label">Active</div>
      </div>
      <div class="stat-card">
        <div class="stat-icon">
          <i class="fas fa-shield-alt"></i>
        </div>
        <div class="stat-number">100%</div>
        <div class="stat-label">Security</div>
      </div>
    </div>

    <!-- Add New Agent Card -->
    <div class="glass-card mb-5">
      <div class="card-header-gradient">
        <h3 class="card-title">
          <i class="fas fa-user-plus"></i>
          Add New Agent
        </h3>
      </div>
      <div class="p-4">
        <form method="POST" action="/admin/agents">
          <div class="row">
            <div class="col-md-6">
              <div class="form-group-modern">
                <label class="form-label-modern">
                  <i class="fas fa-user me-2"></i>Full Name
                </label>
                <input type="text" name="name" class="form-control-modern" placeholder="Enter agent's full name" required />
              </div>
            </div>
            <div class="col-md-6">
              <div class="form-group-modern">
                <label class="form-label-modern">
                  <i class="fas fa-envelope me-2"></i>Email Address
                </label>
                <input type="email" name="email" class="form-control-modern" placeholder="agent@example.com" required />
              </div>
            </div>
          </div>
          <div class="row">
            <div class="col-md-6">
              <div class="form-group-modern">
                <label class="form-label-modern">
                  <i class="fas fa-phone me-2"></i>Phone Number
                </label>
                <input type="text" name="phone" class="form-control-modern" placeholder="+1 (555) 123-4567" required />
              </div>
            </div>
            <div class="col-md-6">
              <div class="form-group-modern">
                <label class="form-label-modern">
                  <i class="fas fa-lock me-2"></i>Password
                </label>
                <input type="password" name="password" class="form-control-modern" placeholder="Create a secure password" required />
              </div>
            </div>
          </div>
          <div class="text-end mt-4">
            <button type="submit" class="btn-modern">
              <i class="fas fa-plus me-2"></i>Add Agent
            </button>
          </div>
        </form>
      </div>
    </div>

    <!-- Agents Table Card -->
    <div class="glass-card">
      <div class="card-header-gradient">
        <h3 class="card-title">
          <i class="fas fa-users"></i>
          Elite Agent Roster
        </h3>
      </div>
      <div class="p-0">
        <div class="table-responsive">
          <table class="table table-modern mb-0">
            <thead>
              <tr>
                <th><i class="fas fa-user me-2"></i>Agent</th>
                <th class="d-none d-md-table-cell"><i class="fas fa-envelope me-2"></i>Contact</th>
                <th class="d-none d-sm-table-cell d-none-mobile"><i class="fas fa-phone me-2"></i>Phone</th>
                <th><i class="fas fa-cog me-2"></i>Actions</th>
              </tr>
            </thead>
            <tbody>
              <% agents.forEach(agent => { %>
                <tr>
                  <td>
                    <div class="d-flex align-items-center">
                      <div class="avatar-modern">
                        <%= agent.name.charAt(0).toUpperCase() %>
                      </div>
                      <div>
                        <strong class="d-block"><%= agent.name %></strong>
                        <small class="text-muted d-md-none"><%= agent.email %></small>
                      </div>
                    </div>
                  </td>
                  <td class="d-none d-md-table-cell"><%= agent.email %></td>
                  <td class="d-none d-sm-table-cell d-none-mobile"><%= agent.phone %></td>
                  <td>
                    <div class="action-group">
                      <a href="/admin/agents/edit/<%= agent._id %>" class="btn-icon btn-modern">
                        <i class="fas fa-edit"></i>
                        <span class="d-none d-md-inline ms-1">Edit</span>
                      </a>
                      <form action="/admin/agents/delete/<%= agent._id %>" method="POST" style="display:inline;">
                        <button type="submit" class="btn-icon btn-danger-modern" onclick="return confirm('Are you sure you want to delete this agent?')">
                          <i class="fas fa-trash"></i>
                          <span class="d-none d-md-inline ms-1">Delete</span>
                        </button>
                      </form>
                    </div>
                  </td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Add smooth scroll behavior
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        document.querySelector(this.getAttribute('href')).scrollIntoView({
          behavior: 'smooth'
        });
      });
    });

    // Add floating particles animation
    function createFloatingParticle() {
      const particle = document.createElement('div');
      particle.style.cssText = `
        position: fixed;
        width: 4px;
        height: 4px;
        background: rgba(34, 197, 94, 0.3);
        border-radius: 50%;
        pointer-events: none;
        z-index: -1;
        left: ${Math.random() * 100}vw;
        top: ${Math.random() * 100}vh;
        animation: floatUp 10s linear infinite;
      `;
      
      const style = document.createElement('style');
      style.textContent = `
        @keyframes floatUp {
          to {
            transform: translateY(-100vh) rotate(360deg);
            opacity: 0;
          }
        }
      `;
      document.head.appendChild(style);
      document.body.appendChild(particle);
      
      setTimeout(() => {
        particle.remove();
      }, 10000);
    }

    // Create floating particles periodically
    setInterval(createFloatingParticle, 3000);

    // Add page load animations
    window.addEventListener('load', () => {
      document.querySelectorAll('.glass-card, .stat-card').forEach((card, index) => {
        card.style.animationDelay = `${index * 0.1}s`;
      });
    });

    // Form validation enhancement
    const forms = document.querySelectorAll('form');
    forms.forEach(form => {
      form.addEventListener('submit', function(e) {
        const inputs = form.querySelectorAll('input[required]');
        let isValid = true;
        
        inputs.forEach(input => {
          if (!input.value.trim()) {
            isValid = false;
            input.style.borderColor = '#ef4444';
            input.focus();
          } else {
            input.style.borderColor = '';
          }
        });
        
        if (!isValid) {
          e.preventDefault();
        }
      });
    });

    // Input focus effects
    const inputs = document.querySelectorAll('.form-control-modern');
    inputs.forEach(input => {
      input.addEventListener('focus', function() {
        this.parentElement.style.transform = 'translateY(-2px)';
      });
      
      input.addEventListener('blur', function() {
        this.parentElement.style.transform = '';
      });
    });
  </script>
</body>
</html>